name: oc_lettings_site_CI_CD

 
on:
  push:
      branches: [ "master" ]
  # in real prod, we would use the following event to deploy the image to render
  # pull_request:
  #     branches: [ "master" ]
  #     types:
  #       - closed

jobs:
  Build:
    # build and deploy only if the pull request is merged
    # if: github.event.pull_request.merged == true

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    # Checkout the repository
    - uses: actions/checkout@v4
    # set up python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    # install dependencies from requirements.txt
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    # run flake8 (linter)
    - name: Run Flake8
    # exclude migrations files beacause it is generated automatically
      run: flake8 --exclude=*/migrations/* .
    # run django tests
    - name: Run Tests
      run: python manage.py test

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Convert Repository Name to Lowercase
      run: echo "REPO_NAME=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image 
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/dockerfile
        platforms: linux/amd64,linux/arm64
        target: prod
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:latest
    # call webhook to deploy the image to render 
    - name: Call webhook
      # Only run this step if the branch is master
      if: github.ref == 'refs/heads/master'
      # RENDER_DEPLOY_HOOK_URL is define in git hub actions
      run: |
        curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}